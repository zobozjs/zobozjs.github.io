"use strict";(self.webpackChunkzobozjs_website=self.webpackChunkzobozjs_website||[]).push([[5374],{1184:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(4041);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},6503:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"learn/intro","title":"Introduction","description":"Zoboz automates many of the tedious aspects of packaging and publishing JavaScript/TypeScript libraries, but understanding the principles behind it can help you take full control of your package\u2019s structure, optimize workflows, and even troubleshoot edge cases when automation isn\u2019t enough.","source":"@site/docs/learn/intro.md","sourceDirName":"learn","slug":"/learn/intro","permalink":"/docs/learn/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/zobozjs/zoboz/tree/main/packages/zobozjs-website/docs/learn/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Introduction","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Learn","permalink":"/docs/category/learn"},"next":{"title":"avoid-pkg-imports","permalink":"/docs/learn/avoid-pkg-imports"}}');var s=i(1085),o=i(1184);const r={title:"Introduction",sidebar_position:1},a="Learn: Understanding Zoboz's Principles",l={},c=[{value:"Why Learn the Principles?",id:"why-learn-the-principles",level:2},{value:"What You&#39;ll Learn",id:"what-youll-learn",level:2},{value:"Learn as You Fix",id:"learn-as-you-fix",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"learn-understanding-zobozs-principles",children:"Learn: Understanding Zoboz's Principles"})}),"\n",(0,s.jsx)(n.p,{children:"Zoboz automates many of the tedious aspects of packaging and publishing JavaScript/TypeScript libraries, but understanding the principles behind it can help you take full control of your package\u2019s structure, optimize workflows, and even troubleshoot edge cases when automation isn\u2019t enough."}),"\n",(0,s.jsx)(n.h2,{id:"why-learn-the-principles",children:"Why Learn the Principles?"}),"\n",(0,s.jsx)(n.p,{children:"Even though almost everything Zoboz enforces can be auto-fixed, knowing why these fixes matter gives you an advantage. By understanding the reasoning behind Zoboz\u2019s decisions, you can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Make informed choices"}),": Automation is great, but sometimes you may want to override a rule or tweak settings based on your project\u2019s needs."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Troubleshoot edge cases"}),": While Zoboz handles the most common issues, unusual build setups or dependencies might require manual intervention."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Improve your build process"}),": Learning best practices helps you structure your package in a way that minimizes friction in development, testing, and distribution."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"what-youll-learn",children:"What You'll Learn"}),"\n",(0,s.jsx)(n.p,{children:"The Learn section is a deep dive into the best practices that Zoboz enforces, covering topics such as:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Why explicit dependency declarations matter"}),": Ensuring everything your package needs is actually listed, preventing missing dependencies after publishing."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["How to structure ",(0,s.jsx)(n.code,{children:"exports"})," correctly"]}),": Avoiding CommonJS and ESM compatibility issues by defining package entry points properly."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ensuring proper import specifiers"}),": How import paths should be formatted to maintain compatibility across different module systems."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Best practices for declaration files (",(0,s.jsx)(n.code,{children:".d.ts"}),")"]}),": Making sure your TypeScript types are correct and accessible to consumers."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Package field validation"}),": Why certain fields should be included (or omitted) from ",(0,s.jsx)(n.code,{children:"package.json"})," to avoid unnecessary issues."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"learn-as-you-fix",children:"Learn as You Fix"}),"\n",(0,s.jsx)(n.p,{children:"Zoboz is designed to provide useful feedback when something isn\u2019t right. If a rule is broken and isn\u2019t automatically fixable, Zoboz will give you a direct link to a relevant lesson explaining the issue in detail. This means you\u2019re not just fixing problems\u2014you\u2019re gaining knowledge that improves your workflow over time."}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Explore the Learn section and start understanding how to structure a universally compatible, future-proof package. Whether you\u2019re using Zoboz to automate fixes or manually refining your package, mastering these principles will make your packages more reliable and easier to maintain."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);