"use strict";(self.webpackChunkzobozjs_website=self.webpackChunkzobozjs_website||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"@zoboz/core","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/core/intro","docId":"core/intro","unlisted":false},{"type":"link","label":"Getting Started","href":"/docs/core/getting-started","docId":"core/getting-started","unlisted":false}],"href":"/docs/category/zobozcore"},{"type":"category","label":"@zoboz/bam","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/bam/intro","docId":"bam/intro","unlisted":false},{"type":"link","label":"Getting Started","href":"/docs/bam/getting-started","docId":"bam/getting-started","unlisted":false}],"href":"/docs/category/zobozbam"},{"type":"category","label":"Learn","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/learn/intro","docId":"learn/intro","unlisted":false},{"type":"link","label":"avoid-pkg-imports","href":"/docs/learn/avoid-pkg-imports","docId":"learn/avoid-pkg-imports","unlisted":false},{"type":"link","label":"avoid-pkg-type","href":"/docs/learn/avoid-pkg-type","docId":"learn/avoid-pkg-type","unlisted":false},{"type":"link","label":"missing-runtime-deps","href":"/docs/learn/missing-runtime-deps","docId":"learn/missing-runtime-deps","unlisted":false}],"href":"/docs/category/learn"}]},"docs":{"bam/getting-started":{"id":"bam/getting-started","title":"Getting Started","description":"Integrating @zoboz/bam into your project allows you to enhance your package distribution by validating and fixing package.json inconsistencies, refining import/export specifiers, and ensuring runtime dependencies are properly listed.","sidebar":"tutorialSidebar"},"bam/intro":{"id":"bam/intro","title":"Introduction","description":"@zoboz/bam (Blazing-fast Automation Module) offers Zoboz\'s powerful safety checks and shimming features without enforcing a specific build process.","sidebar":"tutorialSidebar"},"core/getting-started":{"id":"core/getting-started","title":"Getting Started","description":"Integrating @zoboz/core into your project is straightforward. Follow the steps below to automate your package builds.","sidebar":"tutorialSidebar"},"core/intro":{"id":"core/intro","title":"Introduction","description":"@zoboz/core is the flagship tool of the Zoboz suite, designed to automate the generation of TypeScript declarations, ES modules, and CommonJS modules from your source code.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Building and distributing JavaScript/TypeScript libraries can be a complex task. Zoboz simplifies this process, ensuring your packages are compatible, efficient, and ready for publication.","sidebar":"tutorialSidebar"},"learn/avoid-pkg-imports":{"id":"learn/avoid-pkg-imports","title":"avoid-pkg-imports","description":"If your package supports TypeScript declaration files (.d.ts), ES modules (.mjs/.js), and CommonJS (.cjs), using the imports field in package.json can create unnecessary complexity and compatibility issues.","sidebar":"tutorialSidebar"},"learn/avoid-pkg-type":{"id":"learn/avoid-pkg-type","title":"avoid-pkg-type","description":"The type field in package.json can cause unintended compatibility issues across different module systems. While it may seem like a simple setting, it can impact how Node.js, bundlers, and other tools interpret your package.","sidebar":"tutorialSidebar"},"learn/intro":{"id":"learn/intro","title":"Introduction","description":"Zoboz automates many of the tedious aspects of packaging and publishing JavaScript/TypeScript libraries, but understanding the principles behind it can help you take full control of your package\u2019s structure, optimize workflows, and even troubleshoot edge cases when automation isn\u2019t enough.","sidebar":"tutorialSidebar"},"learn/missing-runtime-deps":{"id":"learn/missing-runtime-deps","title":"missing-runtime-deps","description":"Your package has runtime dependencies that are either missing from package.json or incorrectly listed under devDependencies.","sidebar":"tutorialSidebar"}}}}')}}]);